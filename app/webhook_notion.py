from flask import Flask, request, jsonify
from dotenv import load_dotenv, set_key, get_key
import os
import json

app = Flask(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN_FILE = '.env'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞


@app.route('/notion-webhook', methods=['POST'])
def handle_webhook():
	try:
		data = request.json

		# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
		if 'verification_token' in data:
			verification_token = data['verification_token']

			# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ .env
			set_key(TOKEN_FILE, "NOTION_WEBHOOK_TOKEN", verification_token)
			print(f"üîë –ü–æ–ª—É—á–µ–Ω verification_token: {verification_token}")

			# –û—Ç–≤–µ—Ç –Ω–∞ challenge
			if 'challenge' in data:
				return jsonify({"challenge": data['challenge']}), 200
			return jsonify({"status": "Token saved"}), 200

		# 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –≤–µ–±—Ö—É–∫–∞
		saved_token = get_key(TOKEN_FILE, "NOTION_WEBHOOK_TOKEN")

		if not saved_token:
			return jsonify({"error": "Token not registered"}), 403

		# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ (–ø—Ä–∏–º–µ—Ä)
		incoming_token = request.headers.get('X-Notion-Signature', '')
		if incoming_token and incoming_token != saved_token:
			return jsonify({"error": "Invalid token"}), 403

		print("üì¢ –ü–æ–ª—É—á–µ–Ω –≤–µ–±—Ö—É–∫:", json.dumps(data, indent=2))
		return jsonify({"status": "success"}), 200

	except Exception as e:
		print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
		return jsonify({"error": str(e)}), 500


if __name__ == '__main__':
	if not os.path.exists(TOKEN_FILE):
		print("‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–∂–∏–¥–∞—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å...")
	app.run(host='0.0.0.0', port=5000)