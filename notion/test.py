import requests

def update_page_title(new_title: str):
	"""
	–û–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ Notion

	:param page_id: ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä "21185b6b-d4cc-80b0-b129-f2ebc68965ce")
	:param new_title: –ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	:return: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
	"""
	if not new_title:
		print("‚ùå –û—à–∏–±–∫–∞: new_title –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã")
		return False

	url = f"https://api.notion.com/v1/pages/{PARENT_PAGE_ID}"

	headers = {
		"Authorization": f"Bearer {NOTION_TOKEN}",
		"Notion-Version": "2022-06-28",
		"Content-Type": "application/json"
	}

	# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
	payload = {
		"properties": {
			"title": {  # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ Title
				"title": [
					{
						"text": {
							"content": new_title
						}
					}
				]
			}
		}
	}

	try:
		response = requests.patch(url, headers=headers, json=payload)

		if response.status_code == 200:
			print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: '{new_title}'")
			return True

		# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
		print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")

		if response.status_code == 401:
			print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
			print("1. –í–µ—Ä–Ω—ã–π –ª–∏ NOTION_API_KEY –≤ .env")
			print("2. –î–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (‚ãÆ ‚Üí Add connections)")

		return False

	except Exception as e:
		print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {str(e)}")
		return False
